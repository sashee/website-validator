{
  pkgs,
}:

let
	packageJson = pkgs.lib.importJSON ./package.json;

	npmPackage = pkgs.buildNpmPackage {
		pname = ''${packageJson.name}-node_modules'';
		version = packageJson.version;
		src = (pkgs.lib.sources.cleanSourceWith {
			filter=name: type: builtins.elem name (builtins.map builtins.toString [./package.json ./package-lock.json]);
			src=./.;
		});
		nodejs = pkgs.nodePackages_latest.nodejs;

		nativeBuildInputs = [
			pkgs.pkg-config
		];

		buildInputs = [
		];

		dontNpmBuild = true;

		npmFlags = [ "--ignore-scripts" "--include=dev" ];

		npmDeps = pkgs.importNpmLock {
			package = packageJson;
			packageLock = pkgs.lib.importJSON ./package-lock.json;
		};

		npmConfigHook = pkgs.importNpmLock.npmConfigHook;
	};
in {
	node_modules = "${npmPackage}/lib/node_modules/${packageJson.name}/node_modules";
}
